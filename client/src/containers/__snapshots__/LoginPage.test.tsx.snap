// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<LoginPage /> should render 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <LoginPage
    email="dummy email"
    password="dummy password"
    setEmail={[MockFunction]}
    setPassword={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <InputForm
          label="Email"
          onChange={[Function]}
          placeholder="Input email here"
          type="email"
          value="dummy email"
        />,
        <InputForm
          label="Password"
          onChange={[Function]}
          placeholder="Input password here"
          type="password"
          value="dummy password"
        />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "label": "Email",
          "onChange": [Function],
          "placeholder": "Input email here",
          "type": "email",
          "value": "dummy email",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "label": "Password",
          "onChange": [Function],
          "placeholder": "Input password here",
          "type": "password",
          "value": "dummy password",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <InputForm
            label="Email"
            onChange={[Function]}
            placeholder="Input email here"
            type="email"
            value="dummy email"
          />,
          <InputForm
            label="Password"
            onChange={[Function]}
            placeholder="Input password here"
            type="password"
            value="dummy password"
          />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "label": "Email",
            "onChange": [Function],
            "placeholder": "Input email here",
            "type": "email",
            "value": "dummy email",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "label": "Password",
            "onChange": [Function],
            "placeholder": "Input password here",
            "type": "password",
            "value": "dummy password",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
